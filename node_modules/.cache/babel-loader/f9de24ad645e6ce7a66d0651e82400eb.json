{"ast":null,"code":"var _jsxFileName = \"/Users/ChingHsuan/Documents/Code/Udemy/Web Develop/FinalProject/facerecognization/src/App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './component/Navigation/Navigation';\nimport Logo from './component/Logo/Logo';\nimport Rank from './component/Rank/Rank';\nimport Register from './component/Register/Register';\nimport SignIn from './component/SignIn/SignIn';\nimport FaceRecognition from './component/FaceRecognition/FaceRecognition';\nimport ImageLinkForm from './component/ImageLinkForm/ImageLinkForm';\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nconst app = new Clarifai.App({\n  apiKey: 'd8b84c7c20674b81b1fdc329edda6d61'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 2800\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      //console.log('click');\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: {\n        particles: {\n          particlesOptions\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      isSignedIn: this.state.isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }), this.state.route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      imageUrl: this.state.imageUrl,\n      box: this.state.box,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    })) : this.state.route === 'signin' ? /*#__PURE__*/React.createElement(SignIn, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ChingHsuan/Documents/Code/Udemy/Web Develop/FinalProject/facerecognization/src/App.js"],"names":["React","Component","Navigation","Logo","Rank","Register","SignIn","FaceRecognition","ImageLinkForm","Particles","Clarifai","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","loadUser","data","setState","user","id","name","email","entries","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","console","log","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","onRouteChange","route","isSignedIn","render"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport Navigation from './component/Navigation/Navigation';\nimport Logo from './component/Logo/Logo';\nimport Rank from './component/Rank/Rank';\nimport Register from './component/Register/Register';\nimport SignIn from './component/SignIn/SignIn';\nimport FaceRecognition from './component/FaceRecognition/FaceRecognition';\nimport ImageLinkForm from './component/ImageLinkForm/ImageLinkForm';\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport Clarifai  from 'clarifai';\n\n\n\nconst app = new Clarifai.App({\n apiKey: 'd8b84c7c20674b81b1fdc329edda6d61'\n});\n\nconst particlesOptions = {\n            particles: {\n            \t\t\tnumber: {\n                    value: 30,\n                    density:{\n                      enable:true,\n                      value_area: 2800\n                    }\n                  }\n            \t\t}\n              }\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state={\n      input:'',\n      imageUrl:'',\n      box:{},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n          id: '',\n          name: '',\n          email:'',\n          entries: 0,\n          joined: ''\n\n      }\n    }\n  }\n\n  loadUser = (data) =>{\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email:data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n// connect front end to the server.\n/*\n  componentDidMount(){\n    fetch('http://localhost:3000')\n    .then(response => response.json())\n    .then(console.log)\n  }*/\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width =Number(image.width);\n    const height=Number(image.height);\n\n    return{\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) =>{\n    console.log(box);\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) =>{\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n     //console.log('click');\n    this.setState({imageUrl:this.state.input});\n    app.models\n      .predict(Clarifai.FACE_DETECT_MODEL,this.state.input)\n      .then( response => {\n      if(response){\n        fetch('http://localhost:3000/image', {\n          method: 'put',\n          headers:{'content-Type':'application/json'},\n          body: JSON.stringify({\n            id: this.state.user.id\n        })\n      })\n      .then(response => response.json())\n      .then(count=> {\n        this.setState(Object.assign(this.state.user,{entries: count}))\n      })\n      }\n      this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n    .catch(err => console.log(err))\n  }\n\n\n      //console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n\n  onRouteChange = (route) =>{\n    if (route === 'signout'){\n      this.setState({isSignedIn:false})\n    } else if (route==='home'){\n      this.setState({isSignedIn:true})\n    }\n    this.setState({route:route});\n  }\n\n\n\n  render(){\n    return (\n      <div className=\"App\">\n      <Particles className ='particles'\n  params={{\n    particles: { particlesOptions}\n  }}\n/>\n        <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange}/>\n        {this.state.route === 'home'\n        ? <div>\n            <Logo/>\n              <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n            <ImageLinkForm\n            onInputChange={this.onInputChange}\n            onButtonSubmit={this.onButtonSubmit}\n            />\n            <FaceRecognition imageUrl={this.state.imageUrl} box={this.state.box}/>\n        </div>\n        : (\n          this.state.route === 'signin'\n          ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n          : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n        )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}